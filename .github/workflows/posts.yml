name: Check for new social posts

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  check-social:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download checker binary
        run: |
          # Get the latest release info
          echo "Fetching latest release info from: https://api.github.com/${{ secrets.CHECKER }}/releases/latest"
          HTTP_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -H "Authorization: token ${{ secrets.PAT }}" \
                               "https://api.github.com/${{ secrets.CHECKER }}/releases/latest")
          
          # Extract HTTP status code and response body
          HTTP_STATUS=$(echo $HTTP_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          LATEST_RELEASE=$(echo $HTTP_RESPONSE | sed -e 's/HTTPSTATUS:.*//g')
          
          echo "HTTP Status: $HTTP_STATUS"
          
          # Check HTTP status
          if [ "$HTTP_STATUS" != "200" ]; then
            echo "Error: API request failed with status $HTTP_STATUS"
            if [ "$HTTP_STATUS" = "404" ]; then
              echo "Repository not found or no releases exist. Please check:"
              echo "2. PAT token has access to the repository"
              echo "3. Repository has at least one published release"
            elif [ "$HTTP_STATUS" = "401" ]; then
              echo "Authentication failed. Please check the PAT token permissions."
            fi
            echo "Response: $LATEST_RELEASE"
            exit 1
          fi
          
          # Check if we got a valid response
          if [ -z "$LATEST_RELEASE" ] || [ "$LATEST_RELEASE" = "null" ]; then
            echo "Error: Empty response from API"
            exit 1
          fi
          
          echo "Release info received successfully. Parsing assets..."
          
          # Check if assets exist and extract the download URL
          ASSETS_COUNT=$(echo "$LATEST_RELEASE" | jq -r '.assets | length')
          if [ "$ASSETS_COUNT" = "0" ] || [ "$ASSETS_COUNT" = "null" ]; then
            echo "Error: No assets found in the latest release"
            RELEASE_TAG=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
            echo "Release tag: $RELEASE_TAG"
            exit 1
          fi
          
          echo "Found $ASSETS_COUNT assets in the release"
          
          # Extract the download URL for the linux-amd64 tar.gz file
          DOWNLOAD_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name | contains("linux-amd64.tar.gz")) | .url')
          
          if [ -z "$DOWNLOAD_URL" ] || [ "$DOWNLOAD_URL" = "null" ]; then
            echo "Error: No linux-amd64.tar.gz asset found in the release"
            echo "Available assets:"
            echo "$LATEST_RELEASE" | jq -r '.assets[].name'
            exit 1
          fi
          
          echo "Downloading binary from: $DOWNLOAD_URL"
          
          # Download the binary
          curl -L -H "Authorization: token ${{ secrets.PAT }}" \
               -H "Accept: application/octet-stream" \
               -o checker.tar.gz \
               "$DOWNLOAD_URL"
          
          # Verify the download
          if [ ! -f checker.tar.gz ]; then
            echo "Error: Failed to download the binary"
            exit 1
          fi
          
          echo "Binary downloaded successfully"
          tar -xzf checker.tar.gz
          chmod +x checker
          echo "Binary extracted and ready to use"

      - name: Run checker
        run: |
          ./checker social --data ${GITHUB_WORKSPACE}/data

      - name: Clean up
        run: rm -f checker checker.tar.gz
          
      - name: Add & Commit
        id: add_commit
        uses: EndBug/add-and-commit@v9.1.4
        with:
          message: "Added new social posts"
          add: "./data"
          push: true
          new_branch: new-social-posts

      - name: Create pull request
        uses: devops-infra/action-pull-request@v0.6.1
        if: steps.add_commit.outputs.committed == 'true'
        with:
          github_token: ${{ secrets.PUSH }}
          body: "**Automated pull request after adding new social posts**"
          title: "Added new social posts"
          label: 'automerge'
          source_branch: new-social-posts
          target_branch: main
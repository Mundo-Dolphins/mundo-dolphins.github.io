name: üöÄ Notify new Bluesky posts to Telegram

on:
  push:
    branches: [ main ]
    paths:
      - 'data/posts_*.json'
      - '.github/workflows/notify-social-posts.yml'

concurrency:
  group: notify-social-posts
  cancel-in-progress: false

jobs:
  notify-social-posts:
    runs-on: ubuntu-latest
    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: üì• Restore cache (√∫ltima fecha de post enviado)
        uses: actions/cache/restore@v4
        with:
          path: .github/notifications/last_post_date.txt
          key: social-posts-last-date-${{ github.run_id }}
          restore-keys: |
            social-posts-last-date-

      - name: üì§ Detectar y enviar posts a Telegram
        id: notify
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          chmod +x scripts/notify/notify_social_posts.sh
          ./scripts/notify/notify_social_posts.sh

      - name: ‚è±Ô∏è Delay para reducir colisi√≥n de cache
        if: success()
        run: |
          jitter=$((RANDOM % 5 + 1))
          echo "Esperando $jitter segundos para evitar colisi√≥n de cache"
          sleep "$jitter"

      - name: üíæ Guardar cache (√∫ltima fecha de post enviado)
        if: success()
        uses: actions/cache/save@v4
        continue-on-error: true
        with:
          path: .github/notifications/last_post_date.txt
          key: social-posts-last-date-${{ github.run_id }}

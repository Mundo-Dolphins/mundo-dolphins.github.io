

name: üöÄ Notify new articles or podcasts to Telegram

# ---
# This workflow sends notifications to a Telegram channel whenever a new article or podcast is published.
# It automatically detects new articles or podcasts when they are pushed to the main branch.
#
# Example of message sent:
# üéôÔ∏è New podcast episode published: Dolphins Podcast Ep. 1
# üîó https://mundodolphins.es/podcast/episodio-1/
#
# Requires the secrets TELEGRAM_BOT_TOKEN and TELEGRAM_CHAT_ID configured in the repository.
# ---


on:
  push:
    branches: [ main ]
    paths:
      - 'content/noticias/**/*.md'
      - 'content/podcast/**/*.md'

jobs:
  detect-and-notify-telegram:
    runs-on: ubuntu-latest
    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: üîç Detect new articles
        id: detect_new
        run: |
          echo "üîç Checking for new articles..."
          NEW_FILES=$(git diff --name-only --diff-filter=A HEAD~1 HEAD | grep -E '^content/(noticias|podcast)/.*\.md$' || true)
          if [ -z "$NEW_FILES" ]; then
            echo "‚ÑπÔ∏è No new articles detected"
            echo "has_new_articles=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "üÜï New articles detected:"
          echo "$NEW_FILES"
          ARTICLES_JSON="[]"
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          for file in $NEW_FILES; do
            if [ -f "$file" ]; then
              TITLE=$(yq '.title' "$file" 2>/dev/null | sed 's/^null$//' || echo "New Article")
              AUTHOR=$(yq '.author' "$file" 2>/dev/null | sed 's/^null$//' || echo "Mundo Dolphins")
              FILENAME=$(basename "$file" .md)
              if [[ "$file" == content/noticias/* ]]; then
                SECTION="noticias"
              elif [[ "$file" == content/podcast/* ]]; then
                SECTION="podcast"
              else
                SECTION="noticias"
              fi
              URL="https://mundodolphins.es/${SECTION}/${FILENAME}/"
              ARTICLE_JSON=$(jq -n \
                --arg title "$TITLE" \
                --arg url "$URL" \
                --arg author "$AUTHOR" \
                --arg section "$SECTION" \
                '{title: $title, url: $url, author: $author, section: $section}')
              ARTICLES_JSON=$(echo "$ARTICLES_JSON" | jq ". + [$ARTICLE_JSON]")
              echo "‚úÖ Article processed: $TITLE"
              echo "üîó URL: $URL"
            fi
          done
          echo "has_new_articles=true" >> $GITHUB_OUTPUT
          echo "$ARTICLES_JSON" > articles.json

      - name: üöÄ Enviar notificaciones a Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]; then
            echo "Missing TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID environment variables"
            exit 1
          fi
          
          if [ ! -f articles.json ]; then
            echo "articles.json not found"
            exit 1
          fi
          count=$(jq length articles.json)
          if [ "$count" -eq 0 ]; then
            echo "No new articles to notify"
            exit 0
          fi
          for i in $(seq 0 $((count - 1))); do
            title=$(jq -r ".[$i].title" articles.json)
            url=$(jq -r ".[$i].url" articles.json)
            section=$(jq -r ".[$i].section" articles.json)
            if [ "$section" = "podcast" ]; then
              message="üéôÔ∏è Nuevo cap√≠tulo del podcast publicado: *${title}*%0Aüîó ${url}"
            else
              message="üÜï Nuevo art√≠culo publicado en la web: *${title}*%0Aüîó ${url}"
            fi
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
              -d chat_id="$TELEGRAM_CHAT_ID" \
              -d text="$message" \
              -d parse_mode="Markdown"
          done
